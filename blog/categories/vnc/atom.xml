<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: VNC | The Rem.co Blog]]></title>
  <link href="http://blog.rem.co/blog/categories/vnc/atom.xml" rel="self"/>
  <link href="http://blog.rem.co/"/>
  <updated>2014-01-28T10:31:40+01:00</updated>
  <id>http://blog.rem.co/</id>
  <author>
    <name><![CDATA[Remco Overdijk]]></name>
    <email><![CDATA[remco@rem.co]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OnApp: Using PHP to launch a VNC connection]]></title>
    <link href="http://blog.rem.co/blog/2013/03/01/onapp-using-php-to-launch-a-vnc-connection/"/>
    <updated>2013-03-01T12:48:00+01:00</updated>
    <id>http://blog.rem.co/blog/2013/03/01/onapp-using-php-to-launch-a-vnc-connection</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re an <a href="http://onapp.com/">OnApp</a> user you probably know you can make a VNC connection to your VM&rsquo;s using the Control Panel.
This uses a java applet in your browser as the VNC client.</p>

<p>Wouldn&rsquo;t it be nice to use your own VNC client (like <a href="http://www.nulana.com/remotix-mac">Remotix</a>) instead?</p>

<p>In fact, you can, but OnApp spawns a VNC server on a (somewhat) random port and a new random VNC password for each sessions which you&rsquo;ll have to figure out before setting up your connection.</p>

<p>According to the <a href="https://onapp.zendesk.com/entries/22068371-use-own-vnc-client-instead-of-the-onapp-console">OnApp Helpdesk</a> you can use these calls to get the required information:</p>

<pre><code>GET /virtual_machines/:virtual_machine_id/console.xml
GET /virtual_machines/:virtual_machine_id/console.json
</code></pre>

<p>As I&rsquo;m lazy I didn&rsquo;t want to do this manually every time, so I devised a little PHP script that can aid in finding the right information:</p>

<!-- more -->


<p></p>

<p>``` php OnApp VNC Initiator
&lt;?php
/<em>*
 * GET /virtual_machines/:virtual_machine_id/console.xml
 * GET /virtual_machines/:id.xml
 *
 * The first will start the console session and give you the port number to connect to.
 *
 * The second call, you are looking for remote_access_password.
 </em>/
$CPURL = &ldquo;&rdquo;; // Insert the IP/hostname for your OnApp CP here
$VMID = &ldquo;&rdquo;; // Insert the VM&rsquo;s unique ID here
$username = &ldquo;&rdquo;; // Insert your own username here
$password = &ldquo;&rdquo;; // Insert the password for your account here</p>

<p>$ch = curl_init(&ldquo;<a href="http://">http://</a>{$CPURL}/virtual_machines/{$VMID}/console.json&rdquo;);</p>

<p>curl_setopt($ch, CURLOPT_USERPWD, $username . &ldquo;:&rdquo; . $password);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$result = curl_exec($ch);
$set_one = json_decode($result);
curl_setopt($ch, CURLOPT_URL, &ldquo;<a href="http://">http://</a>{$CPURL}/virtual_machines/{$VMID}.json&rdquo;);
$result = curl_exec($ch);
$set_two = json_decode($result);
$port = $set_one->remote_access_session->port;
echo &ldquo;PORT:\t&rdquo; . $set_one->remote_access_session->port . PHP_EOL;
echo &ldquo;REMOTE_KEY:\t&rdquo; . $set_one->remote_access_session->remote_key . PHP_EOL;
$rap = $set_two->virtual_machine->remote_access_password;
echo &ldquo;REMOTE_ACCESS_PASSWORD:\t&rdquo; . $rap . PHP_EOL;
$un = &ldquo;root&rdquo;;
$pw = $set_two->virtual_machine->initial_root_password;
echo &ldquo;ROOTPASS:\t&rdquo; . $pw . PHP_EOL;
curl_close($ch);
$constructedURL = &ldquo;vnc://{$CPURL}:{$port}/?vncPassword=&rdquo; . urlencode($rap);
echo $constructedURL . PHP_EOL;
shell_exec(&ldquo;open &rdquo; . $constructedURL);
?>
```</p>

<h3>Usage</h3>

<ul>
<li>Using the PHP CLI: Run <code>$ php OnAppInitiator.php</code></li>
<li>The script will display all the information required and open up your default VNC client.</li>
</ul>


<h3>Caveats</h3>

<ul>
<li>This script assumes that you have the <a href="http://php.net/manual/en/book.curl.php">PHP cURL extension</a> installed and enabled.</li>
<li>The script is currently HTTP only as it&rsquo;s hard coded. With a little modification you can get HTTPS if your setup uses/requires that.</li>
<li>You can get the VM&rsquo;s unique ID in the OnApp CP. If you go to the VM&rsquo;s detail page the URL for that page will look like <code>http://cloud.setup/virtual_machines/dfa2bcguwd9mbi</code>. The ID is evertyhing after the last <code>/</code>.</li>
<li>The <code>open</code> call on the last line might not work on your OS; This script was developed/tested on Mac OSX.</li>
<li>In order to <code>open</code> a <code>VNC://</code> link you&rsquo;ll have to specify a link handler on the OS. I used <a href="http://www.rubicode.com/Software/RCDefaultApp/">RCDefaultApp</a> on OSX to set Remotix as the default link handler for VNC links.</li>
</ul>


<h3>Future / TODO</h3>

<p>The script is pretty crude in it&rsquo;s current state but it gets the job done for my day to day needs.</p>

<p>I might fix a couple of things in the near future:</p>

<ul>
<li>Grabbing the required variables such as VMID from the run parameters</li>
<li>Make the script ask for these required variables</li>
<li>Fix the script for use with HTTPS</li>
<li>Integrate this script with the OnApp CP so you can start your VNC client right from the CP</li>
</ul>

]]></content>
  </entry>
  
</feed>
