<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gentoo | The Rem.co Blog]]></title>
  <link href="http://blog.rem.co/blog/categories/gentoo/atom.xml" rel="self"/>
  <link href="http://blog.rem.co/"/>
  <updated>2014-01-28T10:35:35+01:00</updated>
  <id>http://blog.rem.co/</id>
  <author>
    <name><![CDATA[Remco Overdijk]]></name>
    <email><![CDATA[remco@rem.co]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gentoo: Updating and Cleaning]]></title>
    <link href="http://blog.rem.co/blog/2013/01/16/updating-and-cleaning-your-gentoo-linux-server/"/>
    <updated>2013-01-16T23:40:00+01:00</updated>
    <id>http://blog.rem.co/blog/2013/01/16/updating-and-cleaning-your-gentoo-linux-server</id>
    <content type="html"><![CDATA[<p><img class="left <a" src="href="http://www.gentoo.org/images/gblend.png">http://www.gentoo.org/images/gblend.png</a>" width="100" height="100"> Keeping your Gentoo Linux server up to date isn&rsquo;t as straightforward as let&rsquo;s say an Ubuntu box, where you would just run <code>$ apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get clean</code> for example.</p>

<p>Gentoo is far too flexible for a <em>one size fits all</em> approach. The commands outlined below come pretty close for daily use though:</p>

<p><div><script src='https://gist.github.com/2835011.js'></script>
<noscript><pre><code>emerge --sync &amp;&amp; emerge -uDNav --with-bdeps=y @world
emerge --depclean &amp;&amp; revdep-rebuild &amp;&amp; eclean-dist</code></pre></noscript></div>
</p>

<!-- more -->


<p>We start by syncing the portage tree, required to obtain the latest packages.
After which we update the &ldquo;world&rdquo; group (which would entail all packages currently installed) with a couple of options:</p>

<p>-u : Update</p>

<p>-D : Deep, includes updates to prerequisites for packages registered in your world favorites</p>

<p>-N : NewUSE, checks for changes to your USE flags (usually registered in <code>/etc/make.conf</code>or <code>/etc/portage/package.use</code>)</p>

<p>-a : Ask, will show a dialog asking you of the packages to be merged are OK with you. Very useful when you invoke these commands manually, as I do every day. It gives you a last minute escape in case some crucial (like <code>sys-fs/udev</code>) or large (like <code>sys-devel/gcc</code>) package is about to be merged which you really aren&rsquo;t in the mood for.</p>

<p>-v : Verbose, gives more useful output, including the selected USE flags for packages. (Which enables you to spot obvious errors early on).</p>

<p>&mdash;with-bdeps=y : Includes build time dependencies, and is useful for solving some common merge errors. (This can also be done by setting <code>EMERGE_DEFAULT_OPTS="--with-bdeps=y"</code> in <code>/etc/make.conf</code>)</p>

<p>That should suffice to update about every update-able package on your system.</p>

<p><strong>Always make sure to read <em>and follow</em> the instructions that appear after the merge!</strong><br/>
This is exactly why the second line is mentioned separately and isn&rsquo;t concatenated after the first; It gives you opportunity to execute the required steps for crucial packages that might otherwise break your system.</p>

<p>After that we proceed with some basic cleanup:</p>

<ul>
<li>Remove obsolete packages with <code>emerge --depclean</code>.</li>
<li>Check for broken dependencies/links with <code>revdep-rebuild</code>which will automatically fix the issues.</li>
<li>Delete obsolete distfiles (downloaded source packages, required to merge the binaries) for packages that no longer exist on the system with <code>eclean-dist</code>.</li>
</ul>


<p>Running the sequence above on a regular schedule should ensure that you have a smooth running system!</p>

<p>Got improvements or comments on the procedure outlined above? I&rsquo;d love to hear them in the comments below.</p>
]]></content>
  </entry>
  
</feed>
